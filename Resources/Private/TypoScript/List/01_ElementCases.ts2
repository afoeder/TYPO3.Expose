prototype(Foo.ContentManagement:List.Element) < prototype(TYPO3.TypoScript:Case)

# Catch-all condition for the default case
prototype(Foo.ContentManagement:List.Element).matchers.999999999999 {
	condition = ${true}
	type = 'Foo.ContentManagement:List.DefaultElement'
}

prototype(Foo.ContentManagement:List.DefaultElement) < prototype(TYPO3.TypoScript:FluidRenderer)
prototype(Foo.ContentManagement:List.DefaultElement) {
	templatePath = 'resource://Foo.ContentManagement/Private/Elements/List/Row.html'
	item = ${item}
	listActions = ${listActions}
	className = ${className}
	options = ${options}
	#ListLinkType = ${ListLinkType}
	#link = Foo.ContentManagement:List.Link
}



prototype(Foo.ContentManagement:List.Element).matchers.10000 {
	condition = ${q(elementType).notEmpty()}
	type = ${elementType}
}



prototype(Foo.ContentManagement:List.Element).matchers.20000 {
	condition = ${q('resource://' + q(item).getClassPackage() + '/Private/Elements/List/' + q(item).getClassShortName() + 'Element.html').fileExists()}
	type = 'Foo.ContentManagement:List.DefaultEntityElement'
}

prototype(Foo.ContentManagement:List.DefaultEntityElement) < prototype(Foo.ContentManagement:List.DefaultElement)
prototype(Foo.ContentManagement:List.DefaultEntityElement) {
	templatePath = ${'resource://' + q(item).getClassPackage() + '/Private/Elements/List/' + q(item).getClassShortName() + 'Element.html'}
}



prototype(Foo.ContentManagement:List.Element).matchers.15000 {
	condition = ${q('resource://' + q(item).getClassPackage() + '/Private/Elements/List/InformationElements/' + q(item).getOrDefault('variantType', 'Default') + '.html').fileExists()}
	type = 'Foo.ContentManagement:List.InformationVariantElement'
}

prototype(Foo.ContentManagement:List.InformationVariantElement) < prototype(Foo.ContentManagement:List.DefaultElement)
prototype(Foo.ContentManagement:List.InformationVariantElement) {
	templatePath = ${'resource://' + q(item).getClassPackage() + '/Private/Elements/List/InformationElements/' + q(item).getOrDefault('variantType', 'Default') + '.html'}
}